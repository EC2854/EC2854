---
export const metadata = {
  id: 'about',
  name: 'About Me',
  icon: 'waving_hand',
};

function loadComponents(glob) {
  return Object.entries(glob).map(([path, mod]) => {
    const metadata = mod.metadata ?? {};
    return {
      name: metadata.name ?? 'Unnamed',
      id: metadata.id ?? 'id',
      Component: mod.default,
    };
  });
}
const components = loadComponents(import.meta.glob('./about_componenets/*', { eager: true }));
---

<div class="about flex flex-col items-start h-full w-full">
  <nav class="w-full bg-[var(--bg-high)] border-b-2 border-[var(--window-outline)] py-1">
    <ul class="flex items-center justify-start list-none m-0 p-0 w-full">
      {components.map(({ id, name }) => (
        <li class="font-semibold px-2">
          <button
            toggle-id={id}
            class="border-2 border-[var(--border)] bg-[var(--bg-highest)] text-[var(--util-fg)] text-sm px-3 py-[.25rem] cursor-pointer transition duration-200 select-none hover:animate-[tiltBounce_0.5s_ease_forwards] hover:bg-[var(--bg-pressed)] hover:border-[var(--border-pressed)]"
          >
            {name}
          </button>
        </li>
      ))}
    </ul>
  </nav>

  <section class="p-1 px-4 w-full overflow-y-auto">
    {components.map(({ id, Component }) => (
      <article id={id} class="mdx hidden text-[var(--fg)] [&.visible]:block">
        <Component />
      </article>
    ))}
  </section>
</div>

<script>
    const nav = document.querySelector(".about nav") as HTMLElement;
    const buttons = nav.querySelectorAll<HTMLButtonElement>('button');


    const defaultArticle = document.querySelector("#c_bio") as HTMLElement;
    defaultArticle.classList.add("visible");

    buttons.forEach(button => {
        const id = button.getAttribute('toggle-id') as String;
        if (id) {
            button.addEventListener("click", () => {
                const articles = document.querySelectorAll<HTMLElement>(".about section article");
                const article = document.getElementById(`${id}`) as HTMLElement;

                articles.forEach(article => {
                    article.classList.remove("visible");
                })
                article.classList.add("visible");
            })
        }
    })
</script>
