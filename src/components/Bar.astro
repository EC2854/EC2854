---
import ThemeButton from './ThemeButton.astro';

function loadModules(glob) {
    return Object.entries(glob).map(([path, mod]) => {
        const metadata = mod.metadata ?? {};
        return {
            id: metadata.id ?? 'unknown',
            name: metadata.name ?? 'Unnamed',
            icon: metadata.icon ?? 'apps',
        };
    });
}
const utils = loadModules(import.meta.glob('../components/utils/*.astro', { eager: true }));
const info = loadModules(import.meta.glob('../components/info/*.astro', { eager: true }));
---

<div class="bar fixed bottom-0 left-0 right-0 z-3 pointer-events-none">
    <nav
        class=" w-[360px] h-[50vh] bg-gradient-to-t from-[var(--bar-bg)] to-[var(--bar-bg-light)] px-1 py-4 opacity-0 translate-y-100 pointer-events-none border-[var(--bar-border)] border-t-2 border-r-2 shadow-[10px_-10px_15px_rgba(0,0,0,0.15)] transition-all duration-300 [&.visible]:opacity-100 [&.visible]:translate-y-0 [&.visible]:pointer-events-auto">
        <ul class="list-none p-0">
            {info.map(({ id, name, icon }) => (
                <li>
                    <button
                        toggle-id={id}
                        class="w-full text-left text-xl px-3 py-1 my-1 duration-200 cursor-pointer text-[var(--fg)] bg-transparent border-0 hover:bg-gradient-to-r hover:from-[var(--bar-pressed-light)] hover:to-[transparent] hover:border-l-12 hover:border-l-[var(--bar-pressed)]">
                        <span class="text-xl icon text-[var(--bar-fg)] mr-2">{icon}</span>
                        {name}
                    </button>
                </li>
            ))}
            <hr class="border-t-2 border-[var(--bar-border)] my-2" />
            {utils.map(({ id, name, icon }) => (
                <li>
                    <button
                        toggle-id={id}
                        class="w-full text-left text-xl px-3 py-1 my-1 duration-200 cursor-pointer text-[var(--fg)] bg-transparent border-0 hover:bg-gradient-to-r hover:from-[var(--bar-pressed-light)] hover:to-[transparent] hover:border-l-12 hover:border-l-[var(--bar-pressed)]">
                        <span class="text-xl icon text-[var(--bar-fg)] mr-2">{icon}</span>
                        {name}
                    </button>
                </li>
            ))}
        </ul>
    </nav>

    <header
        class="pointer-events-auto bg-gradient-to-r from-[var(--bar-bg)] to-[var(--bar-bg-light)] text-[var(--fg)] border-t-2 border-[var(--bar-border)] p-2 flex items-center justify-start h-[48px] shadow-[0_-10px_15px_rgba(0,0,0,0.15)]">
        <button
            id="logo"
            class="flex items-center h-[32px] px-3 text-l cursor-pointer bg-[var(--bar-button)] text-[var(--bar-button-fg)] border-2 border-[var(--bar-button-fg] shadow-black shadow-md/30 font-bold hover:bg-[var(--bar-button-pressed)] hover:text-[var(--bar-button-fg-pressed)] hover:border-[var(--bar-button-fg-pressed)] hover:animate-[tiltBounce_0.5s_ease_forwards]">
            <span class="icon text-l mr-1">rocket_launch</span>
            <p>Start</p>
        </button>

        <ThemeButton />
        <button
            id="clock"
            class="ml-3 flex items-center h-[32px] px-3 text-l cursor-pointer bg-[var(--bar-button)] text-[var(--bar-button-fg)] border-2 border-[var(--bar-button-fg] shadow-black shadow-md/30 font-bold hover:bg-[var(--bar-button-pressed)] hover:text-[var(--bar-button-fg-pressed)] hover:border-[var(--bar-button-fg-pressed)] hover:animate-[tiltBounce_0.5s_ease_forwards]">
        </button>
    </header>
</div>

<script>
    const clock = document.getElementById("clock") as HTMLButtonElement | null;
    const logo = document.getElementById("logo") as HTMLButtonElement | null;
    const nav = document.querySelector(".bar nav") as HTMLElement | null;

    function toggleVisibility(selector: string): void {
        const el = document.querySelector(selector);
        el?.classList.toggle("visible");
    }


    logo?.addEventListener("click", () => toggleVisibility(".bar nav")); // TODO replace this with nav somehow
    if (nav) {
        const buttons = nav.querySelectorAll<HTMLButtonElement>('button');
        buttons.forEach(button => {
            const id = button.getAttribute('toggle-id') as String;
            if (id) {
                button.addEventListener("click", () => {
                    toggleVisibility(`#${id}`);
                    toggleVisibility(".bar nav"); // TODO and this one xD
                })
            }
        })
    }
    clock?.addEventListener("click", () => toggleVisibility("#timer"));

    function updateClock(): void {
        if (clock) {
            const now = new Date();
            const hours = now.getHours().toString().padStart(2, "0");
            const minutes = now.getMinutes().toString().padStart(2, "0");
            clock.textContent = `${hours}:${minutes}`;
        }
    }
    updateClock();
    setInterval(updateClock, 15000);
</script>
